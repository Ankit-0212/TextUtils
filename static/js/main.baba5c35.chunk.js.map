{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","to","aboutText","role","onClick","toggleMode","htmlFor","Textform","useState","text","setText","style","color","heading","rows","value","placeholder","onChange","event","target","backgroundColor","disabled","length","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","filter","element","defaultProps","Alert","height","alert","word","lower","charAt","slice","capital","msg","About","myStyle","App","setMode","setAlert","message","setTimeout","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.baba5c35.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Link} from 'react-router-dom'\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n              {/* <a className=\"nav-link active\" aria-current=\"page\" href=\"/\"> */}\r\n                Home\r\n              </Link>\r\n              {/* </a> */}\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                {props.aboutText}\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-success\" type=\"submit\" >\r\n              Search\r\n            </button>\r\n          </form> */}\r\n          <div className={`form-check form-switch text-${props.mode==='light'? 'dark':'light'}`}>\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              onClick={props.toggleMode}\r\n            />\r\n            <label className=\"form-check-label \" htmlFor=\"flexSwitchCheckDefault\">\r\n              Enable Dark mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: 'Set title here',\r\n  aboutText: 'About'\r\n};","import React, { useState } from \"react\";\r\n\r\nexport default function Textform(props) {\r\n  const [text, setText] = useState(\"\");\r\n  //   setText(\"New Text\");\r\n\r\n\r\n  const handleUpClick = () => {\r\n    //   console.log(\"upper case was clicked\");\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n\r\n    props.showAlert(\"Converted to uppercase\",'success');\r\n  };\r\n\r\n\r\n  const handleLwClick = () => {\r\n    \r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to lowercase\",'success');\r\n  };\r\n\r\n  const handleClrClick=()=>{\r\n    setText(\"\");\r\n    props.showAlert(\"cleared.\",'success');\r\n  };\r\n\r\n\r\n  const handleOnChange = (event) => {\r\n    //   console.log(\"On Change\");\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleCopy=()=>{\r\n    var text=document.getElementById('exampleFormControlTextarea1');\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Copied to clipboard sucessfully\",'success');\r\n  }\r\n  const handleExtraSpaces=()=>{\r\n    let newText=text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra Spaces removed\",'success');\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div style={{color: props.mode==='dark'? 'white':'black'}}>\r\n        <div className=\"mb-3\" >\r\n          <h1>{props.heading}</h1>\r\n\r\n          <textarea\r\n            className=\"form-control\"\r\n            rows=\"8\"\r\n            value={text}\r\n            placeholder=\"Enter your text here\"\r\n            onChange={handleOnChange}\r\n            id=\"exampleFormControlTextarea1\"\r\n            style={{backgroundColor: props.mode==='dark'? '#343a40':'white',color: props.mode==='dark'? 'white':'black'}}\r\n          ></textarea>\r\n        </div>\r\n        <button disabled={text.length===0} className=\"btn btn-success mx-1 my-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n        <button disabled={text.length===0} className=\"btn btn-success mx-1 my-2\" onClick={handleLwClick}>Convert to Lowercase</button>\r\n        <button disabled={text.length===0} className=\"btn btn-success mx-1 my-2\" onClick={handleClrClick}>Clear</button>\r\n        <button disabled={text.length===0} className=\"btn btn-success mx-1 my-2\" onClick={handleCopy}>Copy</button>\r\n        <button disabled={text.length===0} className=\"btn btn-success mx-1 my-2\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n      </div>\r\n\r\n      <div className=\"conatiner my-3\" style={{color: props.mode==='dark'? 'white':'black'}}>\r\n        <h2>Your Text Summary</h2>\r\n        <p>{text.split(\" \").filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\r\n        <p>{0.08*text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes Read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter something to preview it here...\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  const capital = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n  return (\r\n    <div style={{height:'50px'}}>\r\n      {props.alert && (\r\n        <div\r\n          className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n          role=\"alert\"\r\n        >\r\n          <strong>{capital(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import React from \"react\";\r\n\r\nexport default function About(props) {\r\n  let myStyle={\r\n    color: props.mode===\"dark\"?'white':'black',\r\n    backgroundColor: props.mode===\"dark\"?'#343a40':'white'\r\n  }\r\n  return (\r\n    <div style={myStyle}>\r\n      <div className=\"card\" style={myStyle} >\r\n        {/* <img\r\n          src=\".React\\first\\src\\components\\favicon-96x96.png\"\r\n          className=\"card-img-top\"\r\n          alt=\"...\"\r\n        /> */}\r\n        <div className=\"card-body\" >\r\n          <h1 className=\"text-center my-2\">Analyse your text</h1>\r\n          <p className=\"card-text\">\r\n            A very handy online text tool where you can change between lower\r\n            case and upper case letters, where you can capitalize, uncapitalize,\r\n            convert to mix case and transform your text. <br />\r\n            <br />\r\n            <br />\r\n            If you are wondering how to uncapitalize text, this is exactly what\r\n            the lower case text converter will allow you to do - it transforms\r\n            all the letters in your text into lowercase letters. Simply copy the\r\n            text that you need generating into lower case and paste the text\r\n            into the box above and select the ‘lower case’ tab. this is an\r\n            example of lower case.\r\n            <br />\r\n            <br />\r\n            <br />\r\n            The upper case transformer will take any text that you have and will\r\n            generate all the letters into upper case ones. It will essentially\r\n            make all lower case letters into CAPITALS (as well as keep upper\r\n            case letters as upper case letters). To do this, you simply have to\r\n            select the text that you need changing and pasting into the box\r\n            above and then select the UPPER CASE tab. THIS IS AN EXAMPLE OF\r\n            UPPER CASE.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n  );\r\n}\r\n","import \"./App.css\";\nimport React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Textform from \"./components/Textform\";\nimport Alert from \"./components/Alert\";\nimport About from \"./components/About\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 2500);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"black\";\n      showAlert(\"Dark mode enabled\", \"success\");\n      document.title = \"TextUtils - dark\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"White\";\n      showAlert(\"Dark mode disabled\", \"success\");\n      document.title = \"TextUtils\";\n    }\n  };\n  return (\n    <>\n      <Router>\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          <Switch>\n            <Route exact path=\"/about\">\n              <About mode={mode} />\n            </Route>\n\n            <Route exact path=\"/\">\n              <Textform\n                showAlert={showAlert}\n                heading=\"Enter your text to analyze\"\n                mode={mode}\n              />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}